@layer components {
	.button-group {
		/* These classes must stay in order to ensure functionality */
		display: flex;
		align-items: center;
		justify-content: flex-start;
		/* The default classes and style below can be changed on a per-project basis */
		margin-top: var(--spacing-scaling-base);	  
	}

	p + .button-group {
		margin-top: var(--spacing-base);	  
	}

	/* SET DEFAULT BUTTON STYLE, SHOULD MATCH ONE OF YOUR RESPONSIVE BUTTON STYLE CLASSES IN APP-UTILITIES.CSS */

	.btn, .btn-standard {
		/* These classes must stay in order to ensure functionality */
		display: inline-block;
		margin-inline: 1rem;
		/* The default classes and style below can be changed on a per-project basis */	
		transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1), color 1s cubic-bezier(0.075, 0.82, 0.165, 1), background-color 1s cubic-bezier(0.075, 0.82, 0.165, 1);
		font-weight: 600;		/*border-radius: 0.4rem;*/
		text-transform: uppercase;
		color: var(--color-button-standard-text);
		background-color: var(--color-button-standard-bg);

		&:hover {
			color: var(--color-button-standard-text-hover);
			background-color: var(--color-button-standard-bg-hover);			
			text-decoration: none;
		}

		&:first-child {
			margin-left: 0 !important; 
		} 
			
		&:last-child {
			margin-right: 0 !important;
		}

	}

	.btn-text {  
		border-radius: 0px;
		color: var(--color-button-text-text);
		background-color: transparent;
		text-decoration: none;

		&:hover {
			color: var(--color-button-text-text-hover);
			background-color: transparent;			
			text-decoration: none;
		}
		
	}

	.btn-text-arrow {

		color: var(--color-button-text-text);
		background-color: transparent;

		&::after {
			font: var(--fa-font-solid);
			/* the free version of font awesome is loaded so you can change the icon for the arrow to anything in their collection */
			content: "\f105";
			display: inline-block;
			margin-left: 0.05em;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			color: var(--color-button-text-arrow);    
			transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1), color 1s cubic-bezier(0.075, 0.82, 0.165, 1);    
		}
		
		&:hover {
			color: var(--color-button-text-text-hover);
			background-color: transparent;
			text-decoration: none;

			&::after {
				color: var(--color-button-text-arrow-hover);        
				transform: translateX(0.25em);
			}
		}
	}


	.btn, .btn-md {		
		font-size: var(--text-scaling-base);
		padding-block: var(--spacing-scaling-base);
		

		&.btn-standard {			
			margin-block: var(--spacing-scaling-base);
			padding-inline: var(--spacing-scaling-2x);			
		}
		
		&.btn-text, &.btn-text-arrow {
			margin-block: var(--spacing-scaling-base);
			padding-inline: 0; 			
		}  
	}

	.btn-sm {		
		font-size: var(--text-scaling-sm);
		padding-block: var(--spacing-scaling-half);
		
		&.btn-standard {			
			margin-block: var(--spacing-scaling-half);
			padding-inline: var(--spacing-scaling-base);			
		}
		
		&.btn-text, &.btn-text-arrow {			
			margin-block: var(--spacing-scaling-half);
			padding-inline: 0;			
		} 
	}

	.btn-lg {		
		font-size: var(--text-scaling-lg);
		padding-block: calc(1.5 * var(--spacing-scaling-base));
		
		&.btn-standard {
			margin-block: calc(1.5 * var(--spacing-scaling-base));
			padding-inline: var(--spacing-scaling-3x);  
		}
		
		&.btn-text, &.btn-text-arrow {			
			margin-block: calc(1.5 * var(--spacing-scaling-base));
			padding-inline: 0; 
		} 	 
	}
 
}

/* BUTTON COLORS */

@utility btn-white {
	color: var(--color-black);
	background-color: var(--color-white);

	&:hover {
		color: var(--color-white);
		background-color: var(--color-red-700);			
		text-decoration: none;
	}
}

@utility btn-black {
	color: var(--color-white);
	background-color: var(--color-black);

	&:hover {
		color: var(--color-white);
		background-color: var(--color-red-700);			
		text-decoration: none;
	}
}
	 
		
@utility btn-red {
	color: var(--color-white);
	background-color: var(--color-red-700);

	&:hover {
		color: var(--color-white);
		background-color: var(--color-red-900);			
		text-decoration: none;
	}
}