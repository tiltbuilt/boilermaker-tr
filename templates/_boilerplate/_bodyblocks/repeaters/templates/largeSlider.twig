{#
/**
 * Tilt Boilermaker - Repeater Template - Large Slider
 * -----
 * Simple cards with title, excerpt and link
 * 
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_boilerplate/_macros/globalMacros' as gMacros %}

{# set up attribute list for settings #}

{% set sliderAttrs = {'data-autoplay': repeater.autoplay, 'data-timing': repeater.slideTransitionDelay, 'data-buttons': repeater.buttons, 'data-dots': repeater.dots, 'data-effect': repeater.sliderEffect} %}


{# arrays for outer classes  #}
{% set outerClasses = ['elem-block', colorScheme, 'anim-child', 'bg-off'] %}
{% set itemClasses = ['anim-child', 'repeater-list-item', 'repeater-list-card-img-lg-item'] %}
{% if repeater.dots %}
	{% set outerClasses = outerClasses|merge(['pb-4x']) %}
{% endif %}

<div {{ gMacros.buildElementAttributes( blockId ~ '-slider', 'repeaterSlider', outerClasses, null, sliderAttrs) -}}> 
	<div class="inner sliderSet-inner {{repeater.sliderSize}}">
		<div class="swiper-elem {% if repeaterData|length > 1 %}swiper{% endif %}" id="{{ blockId  ~ '-swiper'}}">
			<div class="swiper-wrapper">
				{% for repeaterItem in repeaterData %}	
				  
				  <div class="slide swiper-slide repeater-lg-slide">
					  <div class="repeater-lg-slide-img-wrapper">
						  {% set image = repeaterItem.image[0] %}					  
						  
						  {%- set transformedImages = craft.imagerx.transformImage(image, 'thumbnail')	%}
							
						  {% if craft.imager.serverSupportsWebp() %}
							  {% set transformedImagesWebp = craft.imagerx.transformImage(image, 'thumbnailWebp') %}
						  {% endif %}
							
						  {% if transformedImages|length %}		  
						  <picture class="block w-full h-full">	  
								
								{% if craft.imager.serverSupportsWebp() %}
									<source data-sizes="auto" data-srcset="{{ craft.imager.srcset(transformedImagesWebp) }}" type="image/webp">
								{% endif %}
							
								<img src="{{ craft.imager.placeholder({width: 160, height: 90}) }}"
								width="160"
								height="90"
								data-sizes="auto"
								data-src="{{ transformedImages[0] }}"
								data-srcset="{{ craft.imager.srcset(transformedImages) }}"
								alt="{{ gMacros.stripTags(repeaterItem.title, '<b><strong><i><em><br>') }}" {{ gMacros.buildClassList('block w-full h-full object-cover lazyload', null, null) -}}
								>
						  </picture>
						  {% endif %}
					  </div>
					  <div class="repeater-lg-slide-content-wrapper">
						  <{{repeaterHeadingLevel}} class="repeater-lg-slide-headline"><a href="{{repeaterItem.url}}" {% if repeaterItem.newTab %}target="_blank"{% endif %}>{{repeaterItem.title}}</a></{{repeaterHeadingLevel}}>
						  {% if repeaterShowDate and repeaterItem.date|length %}	  		
						  		<div class="w-full font-bold mt-base">{{ repeaterItem.date }}</div>	 
					  	  {% endif %}
					  	  {% if repeaterShowExcerpt and repeaterItem.excerpt|length %}	  		
						    	<p class="mt-base w-full">{{ repeaterItem.excerpt }}</p>	  				 
					  	  {% endif %}
						 						 					  						  
						  <div class="buttonGroup {{colorScheme}}">
						  	<a href="{{repeaterItem.url}}" {% if repeaterItem.newTab %}target="_blank"{% endif %} class="btn btn-text-arrow">{{repeater.buttonText}}</a>
						  </div>						
					  </div>
				  </div>
				  				
				{% endfor %}
			</div>
		</div>
		
		{% if (repeater.buttons) and (repeaterData|length > 1)  %}
			<button class="swiper-button-prev" data-target="#{{ blockId  ~ '-swiper'}}" id="{{blockId}}-prev">
				<svg><use xlink:href="#{% if gSettings.sliderPreviousIcon.sprite|length %}{{ gSettings.sliderPreviousIcon.sprite }}{% else %}icon-angle-left{% endif %}"></use></svg>
			</button>
			
			<button class="swiper-button-next" data-target="#{{ blockId  ~ '-swiper'}}" id="{{blockId}}-next">
				<svg><use xlink:href="#{% if gSettings.sliderNextIcon.sprite|length %}{{ gSettings.sliderNextIcon.sprite }}{% else %}icon-angle-right{% endif %}"></use></svg>
			</button>
		{% endif %}  
		{% if (repeater.dots) and (repeaterData|length > 1)  %}
			<div class="swiper-pagination" id="{{blockId}}-pagination"></div>
		{% endif %}	
		
	</div>
</div>