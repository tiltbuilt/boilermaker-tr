{#
/**
 * Tilt Boilermaker - Generic Icon and Content Block Template
 * -----
 * 
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_boilerplate/_macros/globalMacros' as gMacros %}

{# Set block id attribute value #}
{% if block.customId is defined and block.customId != '' %}
	{% set blockId = block.customId %}
	{% set headerId = block.customId ~ '-mainheader' %}
	{% set iconId = block.customId ~ '-icon' %}
	{% set introId = block.customId ~ '-intro' %}
	{% set btnId = block.customId ~ '-btn' %}
{% else %}
	{% set blockId = 'iconContent-' ~ block.id %}
	{% set headerId = 'iconContent-' ~ block.id ~ '-mainheader' %}
	{% set iconId = 'iconContent-' ~ block.id ~ '-icon' %}
	{% set introId = 'iconContent-' ~ block.id ~ '-intro' %}
	{% set btnId = 'iconContent-' ~ block.id ~ '-btn' %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = block.type.handle %}
{% set innerClass = 'inner ' ~ block.type.handle ~ '-inner' %}

{% if block.headerText|length or block.simpleText|length or block.linkSettings.isEmpty == false %}
	{% set hasExtras = true %}
{% else %}
	{% set hasExtras = false %}
{% endif %}


{# Sort Out Styling Adjustments to set up class lit arrays #}

{# create arrays to collect style changes to primary element and inner and bg #}
{% set styleClasses = [] %}
{% set outerClasses = [colorScheme, block.topMargin, block.bottomMargin] %}

{# Get the component's "Custom Class List" setting, thru which arbitrary classes can be added to the component #}
{% set customClassString = (block['customClassList'] is defined ? block.customClassList : null) %}


{# set animation classes for reveal #}

{% set revealClass = [] %}
{% if block.revealAnimation == 'anim-child' %}	
	{% if block.animateChildren is not empty %}
		{% if block.animateChildren == true %}
			{% set revealClass = revealClass|merge(['anim-pass']) %}			
		{% else %}
			{% set revealClass = revealClass|merge([block.revealAnimation]) %}		
		{% endif %}
	{% else %}
		{% set revealClass = revealClass|merge([block.revealAnimation]) %}
	{% endif %}	
{% else %}
	{% if block.animateChildren is not empty %}
		{% if block.animateChildren == true %}
			{% set revealClass = revealClass|merge(['anim-parent']) %}
			{% if block.staggerChildReveals is not empty %}
				{% if block.staggerChildReveals == true %}
					{% set revealClass = revealClass|merge([block.revealAnimation ~ '-stagger']) %}
				{% else %}
					{% set revealClass = revealClass|merge([block.revealAnimation]) %}
				{% endif %}
			{% endif %}			
		{% else %}
			{% set revealClass = revealClass|merge(['anim-elem', block.revealAnimation]) %}		
		{% endif %}
	{% else %}
		{% set revealClass = revealClass|merge(['anim-elem', block.revealAnimation]) %}
	{% endif %}			
{% endif %}
{% set outerClasses = outerClasses|merge(revealClass) %}

{# OUTPUT #}

<div {{ gMacros.buildElementAttributes(blockId, blockClass, outerClasses, customClassString) -}}> 	
	
	<div class="{{innerClass}}">	
		
		{% if hasExtras and block.blockLayout == 'h' %}			
			<div class="row iconContent-row {{block.rowVerticalAlignment}} anim-pass">
				<div class="iconContent-icon-column anim-pass">								
		{% endif %}
		
		<div id="{{iconId}}" class="anim-child iconContent-icon-block">			
			<div class="inner iconContent-icon-block-inner">
				{% if  block.iconAsset.type == 'svg' %}
					{{  block.iconAsset.inline }}
				{% elseif block.iconAsset.type == 'css' %}
					<i class="{{ block.iconAsset }}"></i>								
				{% else %}
					<svg><use xlink:href="#{{ block.iconAsset.value }}"></use></svg>
				{% endif %}		
			</div>			
		</div>
		
		{% if hasExtras %}
			{% if block.blockLayout == 'h' %}			
				</div>			
				<div class="iconContent-content-column anim-pass">
			{% endif %}
			
			{% if block.headerText|length %}
				{% if block.headingLevel == '' %}
					{% set headingTag = 'div' %}
				{% else %}
					{% set headingTag = block.headingLevel %}
				{% endif %}					
				<div {{ gMacros.buildElementAttributes(headerId, 'iconContent-mainheader', ['anim-child', block.mainHeaderStyle ~ '-outer'], null) -}}>					
					<{{ headingTag }} {{ gMacros.buildClassListBasic(['inner', 'iconContent-mainheader-inner',  block.mainHeaderStyle]) -}}>
						<span>{{ gMacros.stripTags(block.headerText) }}</span>
					</{{ headingTag }}>					
				</div>
			{% endif %}
			
			{% if block.simpleText|length %}				
				<div id="{{introId}}" class="iconContent-intro anim-child"">					
					<div class="inner iconContent-intro-inner">
						{{block.simpleText}}
					</div>					
				</div>
			{% endif %}  
			
			{% set buttonLink = block.linkSettings %} {# no link settings, no button #}
			
			{% if buttonLink.url|length %}
				<div class="iconContent-btn-wrapper anim-child">					
					<div class="inner">	
						<a href="{{ buttonLink.url }}" id="{{btnId}}" {{- buttonLink.target|length ? ' target="_blank"' : '' }} {{ gMacros.buildClassListBasic(['btn', 'btn-iconContent',  block.buttonStyle, block.buttonSize]) -}} {% if buttonLink.ariaLabel|length %}aria-label="{{buttonLink.ariaLabel}}"{% endif %} {% if buttonLink.title|length %} title="{{buttonLink.title}}"{% endif %}>
						  <span>{{ buttonLink.getCustomText('More Info') }}</span>
						</a>
					</div>					
				</div>
			{% endif %}
			
			{% if block.blockLayout == 'h' %}			
				</div>			
			</div>
			{% endif %}								
		{% endif %}
					
	</div>				
	    
</div>