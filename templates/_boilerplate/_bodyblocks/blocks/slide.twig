{#
/**
 * Tilt Boilermaker - Generic Slide Block Template
 * -----
 * 
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_boilerplate/_macros/globalMacros' as gMacros %}

{# Set block id attribute value #}
{% if block.customId is defined and block.customId != '' %}
	{% set blockId = block.customId %}
{% else %}
	{% set blockId = 'slide-' ~ block.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = block.type.handle ~ ' swiper-slide' %}
{% set innerClass = block.type.handle ~ '-inner' %}


{% if block.slideColorScheme.class != '' %}
	{% set colorScheme = block.slideColorScheme.class %}
{% endif %}

{% set outerClasses = [colorScheme] %}
{% set styleClasses = [block.topPadding, block.bottomPadding, block.gutterPadding, block.contentAlignment] %}
{% set rowClasses = ['slide-layout', block.rowHorizontalAlignment, block.rowVerticalAlignment] %}


{% set bgSettings = block.backgroundImagery %}

{# Get the component's "Custom Class List" setting, thru which arbitrary classes can be added to the component #}
{% set customClassString = (container['customClassList'] is defined ? block.customClassList : null) %}


{# set animation classes for reveal #}

{% set animClasses = [] %}
{% if block.revealAnimation is defined and block.revealAnimation != '' %}  
	{% set animClasses = animClasses|merge(['anim-wrapper']) %}
	{% set revealClass = block.revealAnimation %}
	{% if block.animateChildren is not empty %}
		{% if block.animateChildren == true %}
			{% set animClasses = animClasses|merge(['anim-parent']) %}
			{% if block.staggerChildReveals is not empty %}
				{% if block.staggerChildReveals == true %}
					{% set revealClass = revealClass ~ '-stagger' %}
				{% endif %}
			{% endif %}
		{% else %}
			{% set animClasses = animClasses|merge(['anim-elem']) %}  		
		{% endif %}
	{% else %}
		{% set animClasses = animClasses|merge(['anim-elem']) %} 
	{% endif %}	
	{% set animClasses = animClasses|merge([revealClass]) %}	
{% endif %}

{# OUTPUT #}

<div {{ gMacros.buildElementAttributes(blockId, blockClass, outerClasses, customClassString) -}}> 	
	<div {{ gMacros.buildClassList(innerClass, styleClasses, null) -}}>
		<div class="container slide-container {% if block.fullScreenWidth is not empty and block.fullScreenWidth == 1 %}container-fullwidth{% endif %}">
			<div {{ gMacros.buildClassListBasic(rowClasses) -}}>	
				<div class="w-full">
				
					{% for child in clone(block.children).collect() %}	  
																		
						{% if child.type.handle starts with 'row' %}
						  	{%
								include [
							  	'_project/_bodyblocks/rows/' ~ child.type.handle,
							  	'_boilerplate/_bodyblocks/rows/' ~ child.type.handle,
							  	'_project/_bodyblocks/rows/row',
							  	'_boilerplate/_bodyblocks/rows/row'
								] with { 'row' :  child }
						  	%}					  
					  	{% else %}
						  	{%
								include [
							  	'_project/_bodyblocks/blocks/' ~ child.type.handle,
							  	'_boilerplate/_bodyblocks/blocks/' ~ child.type.handle,
							  	'_project/_bodyblocks/blocks/block',
							  	'_boilerplate/_bodyblocks/blocks/block'
								] ignore missing with { 'block' :  child, 'loadType' : 1  }
						  	%}
					  	{% endif %}
						
					{% endfor %}
				
				</div>
			</div>
		</div>
	</div>
	<div class="background">
		{% if bgSettings|length %}		
			{{ gMacros.buildElementBackground(bgSettings, {'default': '100vw'}, aspectSize, null) }}
		{% endif %}		
	</div>	
	     
</div>
