{#
/**
 * Tilt Boilermaker - Generic Page Header Block Template
 * -----
 * 
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_boilerplate/_macros/globalMacros' as gMacros %}

{# Set block id attribute value #}
{% set blockId = '#page' ~ entry.id ~ '-pageheader' %}


{# Set block type handle as class name for styling #}
{% set blockClass = 'pageHeader' %}
{% set innerClass = 'inner pageHeader-inner' %}


{# set contClasses with classes needed to be applied to container inner div change as needed to suit your site's header change the padding as you see fit #}
{% set contInnerClasses = ['inner', 'container-inner', 'p-normal', 'pt-4x', 'md:pt-normal'] %}

{# outerClasses has color scheme class and class if section should have transparent bg instead of bg specified in color scheme #}
{% set colorScheme = entry.slideColorScheme.class %}
{% set outerClasses = ['elem-block', colorScheme] %}

{% set bgSettings = entry.backgroundImagery %}


{# set this value to true if you don't want the header content to be constrained #}
{% set fullScreenWidth = false %}


{# set animation classes for reveal #}
{# if you want to animate the page header reveal set this value to one of the following:
'fade-in'
'slide-up-fade-in'
'slide-down-fade-in'
'slide-left-fade-in'
'slide-right-fade-in'
'scale-down-fade-in'
'scale-up-fade-in'

Or if you don't want an animation, set it to null or false.
#}
{% set revealAnimation = 'slide-up-fade-in' %}

{# if you want to animate the entire page header reveal set this value to false. If you want to animate just the child elements inside the header, set it to true #}
{% set animateChildren = true %}

{# if you are animating the child elements and want their animations to stagger, set this to true #}
{% set staggerAnim = true %}

{% if revealAnimation %}
	{% set revealClass = [] %}
	{% if animateChildren %}
		{% set revealClass = revealClass|merge(['anim-parent']) %}
		
		{% if staggerAnim == true %}
			{% set revealClass = revealClass|merge([revealAnimation ~ '-stagger']) %}
		{% else %}
			{% set revealClass = revealClass|merge([revealAnimation]) %}
		{% endif %}
		
	{% else %}
		{% set revealClass = revealClass|merge(['anim-elem', revealAnimation]) %}
	{% endif %}	
		
	{% set outerClasses = outerClasses|merge(revealClass) %}			
{% endif %}


{# OUTPUT #}

<section {{ gMacros.buildElementAttributes(blockId, blockClass, outerClasses, null) -}}>
	<div class="{{innerClass}}">
		<div class="container {% if fullScreenWidth %}container-fullwidth{% endif %}">		
			<div {{ gMacros.buildClassListBasic(contInnerClasses) -}}> 
				{# this div controls the layout of the header. It's styles are in the page-header.pcss file #}
				<div class="pageHeader-layout anim-pass">
					
					{# these are the header elements. Their styles are in the page-header.pcss file #}
					{% if entry.subheadText|length and entry.subheadPosition == 1 %}										
						<div class="pageHeader-subhead anim-child">
							<span>{{ gMacros.stripTags(entry.subheadText) }}</span>
						</div>						
					{% endif %}
					
					{% if entry.headerText|length %}
						{% set pageTitle = entry.headerText %}
					{% else %}
						{% set pageTitle = entry.title %}
					{% endif %}								
					<h1 class="pageHeader-main-header anim-child">
						<span>{{ gMacros.stripTags(pageTitle) }}</span>
					</h1>				
										
					{% if entry.subheadText|length and entry.subheadPosition == 0 %}										
						<div class="pageHeader-subhead anim-child">
							<span>{{ gMacros.stripTags(entry.subheadText) }}</span>
						</div>						
					{% endif %}
					
					{% if entry.simpleText|length %}								
						<div class="pageHeader-intro anim-child">
							{{entry.simpleText}}
						</div>						
					{% endif %}
					
					{% if entry.pageHeaderButtonSettings.isEmpty() == false %}
						{# add any button styles needed to this array #}
						{% set btnClasses = ['btn', 'btn-standard', 'btn-md'] %}
						<div {{ gMacros.buildClassListBasic(['buttonGroup', 'pageHeader-button-group', 'anim-child', entry.slideColorScheme.class]) -}}>
							{% set buttonLink = entry.pageHeaderButtonSettings %}
							<a href="{{ buttonLink.url }}" {{- buttonLink.target|length ? ' target="_blank"' : '' }} {{ gMacros.buildClassListBasic(btnClasses) -}} {% if buttonLink.ariaLabel|length %}aria-label="{{buttonLink.ariaLabel}}"{% endif %} {% if buttonLink.title|length %} title="{{buttonLink.title}}"{% endif %}>
								<span>{{ buttonLink.getCustomText('More Info') }}</span>
							</a>
						</div>	
					{% endif %}					
					
				</div>				
			</div>		
		</div>
	</div>
	<div class="background">
		{% if bgSettings|length %}		
			{{ gMacros.buildElementBackground(bgSettings, {'default': '100vw'}, '3-1', null) }}
		{% endif %}		
	</div>	   
</section>
