{#
/**
 * Tilt Boilermaker - Asset Modal Template
 * -----
 * 
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_boilerplate/_macros/globalMacros' as gMacros %}

{# -- Layout template for HTML pages -- #}
{% extends "_project/_layouts/generic-page-layout.twig" %}

{% set assetItem = craft.assets().id(craft.app.request.getQueryParam('assetid')).one() %}
{% set embeddedAsset = craft.embeddedAssets.get(assetItem) %}

{% set entry = {
	'title': assetItem.title,
	'excerpt': assetItem.title
}
%}

{% block pageContent %}
<div class="p-2x">
	
	{% if embeddedAsset %}
		<div class="video-embed-wrapper" style="padding-top: {{embeddedAsset.aspectRatio}}%">
			<div class="video-player">				
				{{ embeddedAsset.getIframeCode(
				['rel=0', 'modestbranding=1'],
				['loading=lazy', 'allowfullscreen']
			) }}
			</div>
		</div>
		
	{% else %}
		{% if assetItem.kind == 'image' %}
			{% set image = assetItem %}
			{% set imageAltText = image.alt is defined and image.alt|length ? image.alt : image.title %}
			{% if image.mimeType == "image/svg+xml" %}		

				<img src="{{ image.url }}" alt="{{imageAltText}}" class="lazyload block w-full">
		
			{% else %}		
			
				{%- set transformedImages = craft.imagerx.transformImage(image, 'contentImage')	%}
				
				{% if craft.imager.serverSupportsWebp() %}
				  {% set transformedImagesWebp = craft.imagerx.transformImage(image, 'contentImageWebp') %}
				{% endif %}
				
				{% if transformedImages|length %}		  
				  
					<picture>						  
						{% if craft.imager.serverSupportsWebp() %}
							<source data-sizes="auto" data-srcset="{{ craft.imager.srcset(transformedImagesWebp) }}" type="image/webp">
						{% endif %}
					  
						<img src="{{ craft.imager.placeholder({width: image.width, height: image.height}) }}"
						  width="{{image.width}}"
						  height="{{image.height}}"
						  data-sizes="auto"
						  data-src="{{ transformedImages[0] }}"
						  data-srcset="{{ craft.imager.srcset(transformedImages) }}"
						  alt="{{ imageAltText }}" class="lazyload w-full block"
						>
					</picture>
					  
				{% endif %}
			{% endif %}	
		{% elseif assetItem.kind == 'video' %}
			<div class="w-full">
				<div class="video-frame rect-16-9">
					<video          
					  {{ gMacros.buildClassListBasic(['lazyload', 'w-full', 'rect-16-9', 'object-cover']) -}}
					  aria-hidden="true"
					  role="presentation"
					  preload=""				  
					  data-src="{{ assetItem.url }}"
					  type="{{ assetItem.mimeType }}"
					></video>
				</div>				
			</div>
		{% endif %}
	{% endif %}
							
</div>

{% endblock %}
