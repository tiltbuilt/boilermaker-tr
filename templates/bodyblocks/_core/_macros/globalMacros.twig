{#
/**
 * Global macros
 * -----
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 * @package   tiltrus
 */
#}

{#
  Strip tags from a string except for a certain subset
  -----
#}

{% macro stripTags(string, safeTagsString) %}
  {% set safeTagsString = (safeTagsString ? safeTagsString : '<b><strong><i><em><a><br>') %}
  {{- string|striptags(safeTagsString)|raw -}}
{% endmacro %}

{#
  Build image
  -----
  fixedRatio is expected to be in the following format: 1/1
#}

{% macro buildImage(imageorImageField, parentElement, fixedRatio) %}
  {% if imageorImageField|length %}
	{# If imageLink is set on parent, wrap the image in <a> tag #}
	{% if parentElement|length and parentElement['imageLink'] is defined and parentElement.imageLink|length %}
	  {% set imageLink = parentElement.imageLink %}
	  <a href="{{ imageLink.url }}" title="{{ imageLink.text }}"
		{{- imageLink.target|length ? ' target="_blank"' : '' -}}
	  >
	{% endif %}
	
	{# Check if the imageorImageField is one or the other #}
	{% set image = (attribute(imageorImageField, 'one') is defined ? imageorImageField.one() : imageorImageField) %}

	{% set imageAltText = parentElement|length and parentElement['altText'] is defined and parentElement.altText|length ? parentElement.altText : (image['altText'] is defined and image.altText|length ? image.altText : image.title) %}

	{% set imageSettings = { jpegQuality: 90, allowUpscale: false } %}
	
	{# If fixedRatio is set, add it to the imageSettings object #}
	{% if fixedRatio is defined and fixedRatio|length %}
	  {% set imageSettings = imageSettings|merge({ ratio: fixedRatio }) %}
	{% endif %}

	{%
	  set transformedImages = craft.imager.transformImage(image,
		[ { width: 1600 }, { width: 768 }, { width: 414 } ],
		imageSettings
	  )
	%}
	{% if transformedImages|length %}
	  <img
		data-sizes="auto"
		data-src="{{ transformedImages[0] }}"
		data-srcset="{{ craft.imager.srcset(transformedImages, 'w+h') }}"
		alt="{{ imageAltText }}" class="lazyload"
	  >
	{% endif %}

	{# If imageLink is set on paren, wrap the image in <a> tag #}
	{% if parentElement|length and parentElement['imageLink'] is defined and parentElement.imageLink|length %}
	  </a>
	{% endif %}
  {% endif %}
{% endmacro %}



{#
  Get the Layout Location - Page Header content.
  If not found, render a fallbackSection (if provided) or
  render a basic fallback header with breadcrumbs.
#}
{% macro pageHeader(entry) %}
  {# Load in _core Tiltrus Element Display Controls macros #}
  {#{% import '_tiltrus/_core/edcMacros' as edcMacros %}#}
  
  {% if entry['pageBuilder'] is defined and entry.pageBuilder is not null %}
	{% set layoutLocationPageHeader = entry.pageBuilder.level(1).type('layoutLocationPageHeader').one() %}
	{% if layoutLocationPageHeader|length %}
		{% include 'bodyblocks/_core/locationRender' with { layoutLocation: layoutLocationPageHeader } %}
	{% else %}    	
		{% include 'bodyblocks/project/sections/sectionPageHeader' %}
	{% endif %}
  {% else %}    	
		{% include 'bodyblocks/project/sections/sectionPageHeader' %}
  {% endif %}
{% endmacro %}

{#
  Get the Layout Location - Page Footer
  ------
  If none found, look through ancestors for content to render.
  If no ancestors found, use the homepage.
#}

{% macro pageFooter(entry) %}
  {% set layoutLocationPageFooter = false %}
  {% set ancestorFound = false %}

  {% if entry|length %}
	{# Attempt to get entry's pageFooter #}
	{% if entry['pageBuilder'] is defined and entry.pageBuilder is not null %}
	  {% set layoutLocationPageFooter = entry.pageBuilder.level(1).type('layoutLocationPageFooter').one() %}
	{% endif %}

	{# If entry pageFooter not found, look thru ancestors #}
	{% if entry is defined and layoutLocationPageFooter == false %}
	  {% set ancestors = entry.getAncestors() is defined ? entry.getAncestors().all() : null %}
	  {% for ancestor in ancestors if not ancestorFound %}
		{% if ancestor['pageBuilder'] is defined %}
		  {% set layoutLocationPageFooter = ancestor.pageBuilder.level(1).type('layoutLocationPageFooter').one() %}

		  {% if layoutLocationPageFooter|length %}
			{% set ancestorFound = true %}
		  {% endif %}
		{% endif %}
	  {% endfor %}
	{% endif %}
  {% endif %}
  
  {# If entry's and ancestors' pageFooter not found, get Homepage's #}
  {% if ancestorFound == false and layoutLocationPageFooter == false %}
	{% set homepageEntry = craft.entries.slug('home').one() %}
	{# if no entry with slug 'home' check for __home__ #}
	{% if homepageEntry is null %}
		{% set homepageEntry = craft.entries.slug('__home__').one() %}
	{% endif %}
	{% if homepageEntry['pageBuilder'] is defined and homepageEntry.pageBuilder is not null %}
	  {% set layoutLocationPageFooter = homepageEntry.pageBuilder.level(1).type('layoutLocationPageFooter').one() %}
	{% endif %}
  {% endif %}

  {% if layoutLocationPageFooter is defined %}
	{% include 'bodyblocks/_core/locationRender' with { layoutLocation: layoutLocationPageFooter } %}
  {% endif %}

{% endmacro %}

{#
  Render any header embeds for the current entry/category
#}

{% macro entryHeaderEmbeds(object) %}
  {% if object|length and object['headerEmbeds'] is defined and object.headerEmbeds|length %}
	{{ object.headerEmbeds|raw }}
  {% endif %}
{% endmacro %}

{#
  Render any header embeds for the current entry/category
#}

{% macro entryFooterEmbeds(object) %}
  {% if object|length and object['footerEmbeds'] is defined and object.footerEmbeds|length %}
	{{ object.footerEmbeds|raw }}
  {% endif %}
{% endmacro %}

{#
  Display an inline list of news topics links
#}
{% macro newsTopicsList(entry) %}
  {%- set i = 0 -%}
  {%- for newsTopic in entry.newsTopics.all() -%}
	{%- set i = i + 1 -%}
	{{- (i > 1 ? ', ' : null) -}}
	<a href="{{ newsTopic.url }}">{{ newsTopic.title }}</a>
  {%- endfor -%}
{% endmacro %}