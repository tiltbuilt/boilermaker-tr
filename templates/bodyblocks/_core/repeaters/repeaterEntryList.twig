{#
/**
 * Repeater - Entry List - Default
 * -----
 *
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 * @package   tiltrus
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import 'bodyblocks/_core/_macros/globalMacros' as gMacros %}
{# Load in _core Tiltrus Element Display Controls macros #}
{% import 'bodyblocks/_core/_macros/edcMacros' as edcMacros %}
{# Optionally load in project-specific EDC macro overrides #}
{# {% import '_tiltrus/_project/edcMacros' as edcMacros %} #}


{# Set block id attribute value #}
{% if repeater.customId is defined and repeater.customId != '' %}
	{% set blockId = repeater.customId %}
{% else %}
	{% set blockId = 'wrapper-' ~ repeater.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = repeater.type.handle %}

{# Get the component's "Custom Class List" setting, thru which arbitrary classes can be added to the component #}
{% set customClassString = (repeater['customClassList'] is defined ? repeater.customClassList : null) %}

{# Get styling classes for block and assemble as class string #}
{% set stylingClasses = ['repeater'] %}


{% if repeater.contentAlignment is defined and repeater.contentAlignment != '' %}
	{% set stylingClasses = stylingClasses|merge([repeater.contentAlignment]) %}
{% endif %}

{% if repeater.textStyling is defined and repeater.textStyling != null  %}
	{% set stylingClasses = stylingClasses|merge(repeater.textStyling) %}
{% endif %}

{% set stylingClasses = stylingClasses|merge([repeater.topMargin, repeater.bottomMargin]) %}


{# if header has text build set of padding and margin classes for header #}

{% if repeater.headerText|length and repeater.headingLevel != '' %}
	{% set headerClasses = [] %}		
	{% set headerClasses = headerClasses|merge([repeater.headerAlignment]) %}
	{% set headerClasses = headerClasses|merge(repeater.headingStyling) %}	
	{% set headerClasses = headerClasses|merge([repeater.headingBottomMargin]) %}
{% endif %}

{# Get the heading level for Repeater Items #}
{% set repeaterItemsHeadingLevel = repeater['listItemsHeadingLevel'] is defined and repeater.listItemsHeadingLevel|length ? repeater.listItemsHeadingLevel : 'div' %}


{# reveal animations #}
{% set parentAnim = false %}
{% if repeater.revealAnimation is defined and repeater.revealAnimation != '' %}  
  {% set revealClass = repeater.revealAnimation %}
  {% if repeater.applyRevealToChildElements %}
	  {% set revealClass = revealClass ~ 'Subs' %}
	  {% set parentAnim = true %}
	  {% set headerClasses = headerClasses|merge(['anim-child']) %}
	{% if repeater.staggerChildReveals %}
		{% set revealClass = revealClass ~ 'Stagger' %}
	{% endif %}
  {% endif %}
  {% set stylingClasses = stylingClasses|merge([revealClass]) %}
{% endif %}



{# Get the styling for Repeater Items Titles #}
{% set listItemHeaderStyles = repeater.listItemHeadingStyling %}


{#
  ----
  Prepare the query parameters
  -----
#}

{%
  set orderOptions = {
	'dd' : 'postDate desc',
	'da' : 'postDate asc',
	'r'  : 'RAND()',
	'az' : 'title asc',
	'za' : 'title desc',
	'so' : '',
  }
%}
{% set listOrder = repeater.listOrder is defined and repeater.listOrder|length ? repeater.listOrder.value : null %}

{% if listOrder|length %}
  {% set listOrder = listOrder in orderOptions|keys ? orderOptions[listOrder] : 'postDate desc' %}
{% endif %}


{# Search Term can be passed manually from parent templates but isn't exposed through Tiltrus. #}
{% set searchTerm = repeater['searchTerm'] is defined and repeater.searchTerm|length ? repeater.searchTerm : null %}

{% set numberOfItems = repeater['listCount'] is defined and repeater.listCount|length ? repeater.listCount : 0 %}

{% set paginateItems = numberOfItems == 0 ? true : false %}

{% set sectionsToLoad = repeater['listEntriesSections'] is defined and repeater.listEntriesSections|length and repeater.listEntriesSections[0] is defined and repeater.listEntriesSections[0]|length ? repeater.listEntriesSections : null %}

{# Get an array of Entry/Category/Tag objects and/or IDs (e.g. '525') #}
{% set relatedToArray = repeater['relatedToArray'] is defined ? repeater.relatedToArray : [] %}
{% set relatedToArray = ([])|merge(relatedToArray) %}

{# If a number of items isn't specified, get them all and paginate them #}
{% if paginateItems == true %}
  {% set itemsPerPage = repeater.listItemsPerPage is defined and repeater.listItemsPerPage|length ? repeater.listItemsPerPage : 3 %}

  {% paginate craft.entries.section(sectionsToLoad|join(', ')).search(searchTerm).relatedTo(relatedToArray).orderby(listOrder).limit(itemsPerPage).with(['seoImage']) as pageInfo, itemList %}
  {% do seomatic.helper.paginate(pageInfo) %}
{% else %}
  {% set itemList = craft.entries.section(sectionsToLoad|join(', ')).search(searchTerm).relatedTo(relatedToArray).orderby(listOrder).limit(numberOfItems).with(['seoImage']).all() %}
{% endif %}

{#
  -----
  Render
  -----
#}

<div {{ edcMacros.buildElementAttributes(blockId, blockClass, stylingClasses, customClassString) -}}>

  <div class="inner">
	  
	  {% if repeater.headerText|length and repeater.headingLevel != '' %}
		  <{{ repeater.headingLevel }} {{ edcMacros.buildClasses('contentWrapper-header', headerClasses) -}}>
			  {{ gMacros.stripTags(repeater.headerText) }}
		  </{{ repeater.headingLevel }}>
	  {% endif %}
	  
	  {% if repeater.simpleText|length %}
	  <div class="{{ repeater.introTextBottomMargin }} {% if repeater.applyRevealToChildElements %}anim-child{% endif %}">
		{{ repeater.simpleText }}
	  </div>
	  {% endif %}
	  
	  {% if itemList|length %}
		<div class="entryList">
  
		{#
		  Add data for each entry to the repeaterData map we'll send to the
		  Repeater Template for rendering.
		#}
		{% set repeaterData = [] %}
		{% for item in itemList %}
		  {% set repeaterData = repeaterData|merge([item]) %}
		{% endfor %}
		  
		  {# determine list display style setting and include necessary list template #}
  
		{% set repeaterTemplateHandle = repeater.listItemDisplayStyle %}  
		  		  
		  {%
			include [
			  'bodyblocks/project/repeaters/templates/' ~ repeaterTemplateHandle,
			  'bodyblocks/_core/repeaters/templates/' ~ repeaterTemplateHandle,
			] with { 'repeaterData' : repeaterData, 'repeaterHeadingLevel' : repeater.listItemHeadingLevel, 'repeaterListHeaderStyles': listItemHeaderStyles, 'repeaterShowExcerpt' : repeater.showExcerpt, 'repeaterBtnStyles' : repeater.listItemButtonStyling, 'repeaterBtnSize' : repeater.listItemButtonSize, 'parentAnim' : parentAnim }
		  %}
  
		</div>
  
		{#- If paginated, show pagination UI -#}
		{% if paginateItems == true %}
		  {% include '_partials/pagination' %}
		{#- Else, show the view all button (if set) -#}
		{% else %}
		  {% if repeater['viewAllButtonSettings'] is defined and repeater.viewAllButtonSettings|length %}
			{% set viewAllLink = repeater.viewAllButtonSettings %}			
			<div class="list-button-wrapper {{ repeater.buttonAlignment }}">
			  <a href="{{ viewAllLink.url }}" {{ edcMacros.buildElementAttributes(null, 'btn', repeater.buttonStyling) }} {{- viewAllLink.target|length ? ' target="_blank"' : '' -}}>
				<span>{{ viewAllLink.text }}</span>
			  </a>
			</div>
		  {% endif %}
		{% endif %}
	  {% else %}
		<div class="list-no-items">
		  <b>No items found.</b>
		</div>
	  {% endif %}
	  
  </div>  
</div>