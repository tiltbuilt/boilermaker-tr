{#
/**
 * Block - Button Group
 * -----
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2020, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import 'bodyblocks/_core/_macros/globalMacros' as gMacros %}
{# Load in _core Tiltrus Element Display Controls macros #}
{% import 'bodyblocks/_core/_macros/edcMacros' as edcMacros %}
{# Optionally load in project-specific EDC macro overrides #}
{# {% import '_tiltrus/_project/edcMacros' as edcMacros %} #}

{# Set block id attribute value #}
{% if blockId is not defined %}
	{% if block.customId is defined and block.customId != '' %}
		{% set blockId = block.customId %}
	{% else %}
		{% set blockId = 'buttonSet-' ~ block.id %}
	{% endif %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = block.type.handle %}

{# Get styling classes for block and assemble as class string #}
{% set stylingClasses = [] %}

{% if block.fullWidthOnMobile is defined and block.fullWidthOnMobile == 1 %}
	{% set stylingClasses = stylingClasses|merge(['btn-mobile-fullwidth']) %}
{% endif %}

{% if block.buttonAlignment is defined and block.buttonAlignment != '' %}
	{% set stylingClasses = stylingClasses|merge([block.buttonAlignment]) %}
{% endif %}

{% if ignoreMargins is not defined or (ignoreMargins is defined and ignoreMargins == false) %}
	{% set stylingClasses = stylingClasses|merge([block.topMargin, block.bottomMargin]) %}
{% endif %}

{# Get the component's "Custom Class List" setting, thru which arbitrary classes can be added to the component #}
{% set customClassString = (block['customClassList'] is defined ? block.customClassList : null) %}

{# Render #}
{% set blockKids = block['children'].all() %}

{% if blockKids is not empty %}
	<div {{ edcMacros.buildElementAttributes(blockId, blockClass, stylingClasses, customClassString) -}}>
	   <div class="inner">
			
			{% for child in blockKids %}		
					
					{%						
						include [
						  'bodyblocks/project/blocks/' ~ child.type.handle,
						  'bodyblocks/_core/blocks/' ~ child.type.handle,
						  'bodyblocks/project/blocks/block',
						  'bodyblocks/_core/blocks/block'
						] ignore missing with { 'block': child, 'ignoreMargins': true, 'inGroup': true, 'btnSize': block.buttonSize }
					%}					
				
			{% endfor %}	  
		   
	   </div>
	</div>
{% endif %}
