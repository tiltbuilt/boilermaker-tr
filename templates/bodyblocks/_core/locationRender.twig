{#
/**
 * Layout Location Rendering
 * -----
 * Renders children (Sections) for a layoutLocation Neo block passed to this
 * template as `layoutLocation`
 *
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com * 
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import 'bodyblocks/_core/_macros/globalMacros' as gMacros %}

{# Load in _core Tiltrus Element Display Controls macros #}
{% import 'bodyblocks/_core/_macros/edcMacros' as edcMacros %}

{% if layoutLocation is defined and layoutLocation|length and layoutLocation['children'] is defined %}
  
  {% if blockType is defined and blockType|length %}
  	{% set renderSet = layoutLocation.children.type(blockType).all() %}
  {% else %}
  	{% set renderSet = layoutLocation.children.all() %}
  {% endif %}
  
  {% for child in renderSet %}
	{#-
	  For each child component, attempt to load a custom template for the
	  component handle from the project's files,
	  then the same template from the core Tiltrus files,
	  then a custom default template from the project,
	  and finally the default template for this component type from the core Tiltrus files.
	-#}
	{% if child.type.handle starts with 'section' %}
	  {%
		include [
		  'bodyblocks/project/sections/' ~ child.type.handle,
		  'bodyblocks/_core/sections/' ~ child.type.handle,
		  'bodyblocks/project/sections/section',
		  'bodyblocks/_core/sections/section'
		] with { 'section' : child }
	  %}
	{% elseif child.type.handle starts with 'container' %}
	  {%
		include [
		  'bodyblocks/project/containers/' ~ child.type.handle,
		  'bodyblocks/_core/containers/' ~ child.type.handle,
		  'bodyblocks/project/containers/container',
		  'bodyblocks/_core/containers/container'
		] with { 'container' :  child }
	  %}
	{% elseif child.type.handle starts with 'row' %}
	  {%
		include [
		  'bodyblocks/project/rows/' ~ child.type.handle,
		  'bodyblocks/_core/rows/' ~ child.type.handle,
		  'bodyblocks/project/rows/row',
		  'bodyblocks/_core/rows/row'
		] with { 'row' :  child }
	  %}
	{% elseif child.type.handle starts with 'repeater' %}
	  {%
		include [
		  'bodyblocks/project/repeaters/' ~ child.type.handle,
		  'bodyblocks/_core/repeaters/' ~ child.type.handle
		] with { 'repeater' :  child }
	  %}
    {% elseif child.type.handle starts with 'accordion' %}
	  {%
		include [
		  'bodyblocks/project/accordions/' ~ child.type.handle,
		  'bodyblocks/_core/accordions/' ~ child.type.handle,
		  'bodyblocks/project/accordions/accordion',
		  'bodyblocks/_core/accordions/accordion'
		] with { 'accordion' :  child }
	  %}
	{% elseif child.type.handle starts with 'tabSet' %}
	  {%
		include [
		  'bodyblocks/project/tabs/' ~ child.type.handle,
		  'bodyblocks/_core/tabs/' ~ child.type.handle,
		  'bodyblocks/project/tabs/tabSet',
		  'bodyblocks/_core/tabs/tabSet'
		] with { 'tabSet' :  child }
	  %}
	{% elseif child.type.handle starts with 'tabPanel' %}
	  {%
		include [
		  'bodyblocks/project/tabs/' ~ child.type.handle,
		  'bodyblocks/_core/tabs/' ~ child.type.handle,
		  'bodyblocks/project/tabs/tabPanel',
		  'bodyblocks/_core/tabs/tabPanel'
		] with { 'tabPanel' :  child }
	  %}
	{% else %}
	  {%
		include [
		  'bodyblocks/project/blocks/' ~ child.type.handle,
		  'bodyblocks/_core/blocks/' ~ child.type.handle,
		  'bodyblocks/project/blocks/block',
		  'bodyblocks/_core/blocks/block'
		] with { 'block' :  child }
	  %}
	{% endif %}
  {% endfor %}
{% endif %}
