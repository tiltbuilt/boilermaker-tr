{#
/**
 *  Row - Default
 * -----
 *
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 * @package   tiltrus
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import 'bodyblocks/_core/_macros/globalMacros' as gMacros %}
{# Load in _core Tiltrus Element Display Controls macros #}
{% import 'bodyblocks/_core/_macros/edcMacros' as edcMacros %}
{# Optionally load in project-specific EDC macro overrides #}
{# {% import '_tiltrus/_project/edcMacros' as edcMacros %} #}


{# Set block id attribute value #}
{% if row.customId is defined and row.customId != '' %}
	{% set blockId = row.customId %}
{% else %}
	{% set blockId = 'row-' ~ row.id %}
{% endif %}

{# set loadType to null if not defined - for handling lazy load on carousels #}
{% if loadType is not defined %}
	{% set loadType = null %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = 'row' %}

{# Get styling classes for block and assemble as class string #}
{% set stylingClasses = [row.rowHorizontalAlignment, row.rowVerticalAlignment, row.leftMargin, row.rightMargin, row.rowTopMargin, row.rowBottomMargin] %}

{# reveal animations #}
{% if row.revealAnimation is defined and row.revealAnimation != '' %}  
  {% set revealClass = row.revealAnimation %}
  {% if row.applyRevealToChildElements %}
	  {% set revealClass = revealClass ~ 'Subs' %}
	{% if row.staggerChildReveals %}
		{% set revealClass = revealClass ~ 'Stagger' %}
	{% endif %}
  {% endif %}
  {% set stylingClasses = stylingClasses|merge([revealClass]) %}
{% endif %}


{# Get the component's "Custom Class List" setting, thru which arbitrary classes can be added to the component #}
{% set customClassString = (row['customClassList'] is defined ? row.customClassList : null) %}

<div {{ edcMacros.buildElementAttributes(blockId, blockClass, stylingClasses, customClassString) -}}>
 
	{% for column in row['children'].all() %}
	  {#-
		Attempt to load a custom template for the component handle from the project's files,
		then the same template from the core Tiltrus files,
		then a custom default template from the project,
		and finally the default template for this component type from the core Tiltrus files.
	  -#}
	  {%
		include [
		  'bodyblocks/project/columns/' ~ column.type.handle,
		  'bodyblocks/_core/columns/' ~ column.type.handle,
		  'bodyblocks/project/columns/column',
		  'bodyblocks/_core/columns/column'
		] with { 'column' :  column, 'loadType': loadType }
	  %}
	{% endfor %}  
   
</div>