{#
/**
 * Default page template
 * -----
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import 'bodyblocks/_core/_macros/globalMacros' as gMacros %}
{# Load in _core Tiltrus Element Display Controls macros #}
{% import 'bodyblocks/_core/_macros/edcMacros' as edcMacros %}
{# Optionally load in project-specific EDC macro overrides by calling it edcMacros and loading in here #}

{%- set siteGlobals = craft.globalSets()
.handle('gSettings')
.with(['thumbnailPlaceholderImage'])
.one()
-%}

{%- set coSocialLinks = craft.globalSets()
.handle('companyInfo')
.with(['socialLinks'])
.one()
-%}


{% do craft.app.elements.eagerLoadElements(
 className(entry),
 [entry],
 ['seoImage', 'modalToDisplay', 'headerImage', 'headerLinkButtons', 'headerBackground', 'pageBuilder', 'pageBuilder.sectionStandard:backgroundImage', 'pageBuilder.container:backgroundImage', 'pageBuilder.container2Column:backgroundImage', 'pageBuilder.containerWithSidebar:backgroundImage', 'pageBuilder.column:backgroundImage', 'pageBuilder.columnHalf:backgroundImage','pageBuilder.columnMain:backgroundImage', 'pageBuilder.columnSidebar:backgroundImage', 'pageBuilder.columnSlideContent:backgroundImage',  'pageBuilder.contentWrapper:backgroundImage', 'pageBuilder.accordion:backgroundImage', 'pageBuilder.tabSet:backgroundImage', 'pageBuilder.slide:backgroundImage', 'pageBuilder.ctaStandard:imageAsset', 'pageBuilder.image:imageAsset', 'pageBuilder.slideContentImage:imageAsset', 'pageBuilder.contentVideo:imageAsset', 'pageBuilder.repeaterItemContentLink:imageAsset', 'pageBuilder.repeaterEntryChildList:listParentEntry']
) %}

{% extends "_layout" %}

{% block pageId %}page-{{- entry.slug -}}{% endblock %}

{% set buttonModalList = [] %}
{% for block in entry.pageBuilder if block.type == 'buttonModal' %}
	{% set buttonModalList = buttonModalList|merge([block]) %}
{% endfor %}

{% block bodyAttr %}	
	{% if entry.modalToDisplay|length or buttonModalList|length %}class="has-modal{% if entry.modalToDisplay|length %} load-modal{% endif %}"{% endif %} {% if entry.modalToDisplay|length %}{% set loadModal = entry.modalToDisplay[0] %}data-load-modal="{{loadModal.url}}"{% endif %}	
{% endblock %}
	
{% block pageHeader %}
	{% if entry.showPageHeader %}	
	  {% include 'bodyblocks/project/sections/sectionPageHeader' %}
	{% endif %} 
{% endblock %}
 
  
{% block pageContent %}
	{# Preparation for the eager-loaded Neo field #}
	
	{% for block in entry.pageBuilder %}
		{% do block.useMemoized(entry.pageBuilder) %}
	{% endfor %}
	
	{% for block in entry.pageBuilder if block.level == 1 %}
		{% include 'bodyblocks/_core/locationRender' with { layoutLocation: block } %}  
	 {% endfor %}
	  
{% endblock %}

{% block pageFooter %}
	{% if entry.showPageFooter %}
	  {% include 'bodyblocks/project/sections/sectionPageFooter' %}
	{% endif %}
{% endblock %}

{% block modalContent %}	
{% if entry.modalToDisplay|length or buttonModalList|length %}		
	<div id="modal-overlay" class="closed">
		<div id="modal" class="closed" role="dialog" aria-labelledby="modal-title" aria-describedby="modal-description" aria-hidden="true">
			<button id="btn-modal-close" class="btn-modal-close">			  
				<svg><use xlink:href="#icon-close"></use></svg>
			</button>
			<div id="modal-content">
				<div class="modal-spinner">
					<img src="/dist/img/ajax-loader-gray-300.gif" alt="Loading" />
				</div>
			</div>
		</div>
	</div>		
{% endif %}
{% endblock %}


