{#
/**
 * Tilt Boilermaker - Slider Set Template
 * -----
 * Loads the appropriate page partial or the default
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_macros/globalMacros' as gMacros %}

{# Create array for classes to pass to macros for section #}
{% set sliderSetClassList = [] %}

{# Set block id attribute value #}
{% if entry.customId is defined and entry.customId != '' %}
	{% set blockId = entry.customId|replace({' ': '-'})|trim %}
{% else %}
	{% set blockId = 'slider-set-' ~ entry.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = entry.type.handle|kebab %}

{# Get classes for element animation settings #}
{% if animSetting is defined %}
	{% if animSetting.animate and animSetting.animateContent and animSetting.animLevel %}
		{% set animate = true %}	
	{% else %}
		{% set animate = false %}		
	{% endif %}
{% else %}
	{% set animate = false %}
{% endif %}

{# Set color classes #}
{% if colorScheme is not defined %}
	{% set colorScheme = "color-theme-default" %}	
{% endif %}
{% set colorClasses = [] %}
{% if entry.colorScheme != null %}
	{% set colorScheme = entry.colorScheme.class %}	
{% endif %}

{% set sliderSetClassList = sliderSetClassList|merge([colorScheme]) %}

{# Retrieve styling adjustments #}
{#{% set adjustments = entry.sliderSetStyleAdjustments.eagerly().all() %}#}

{# Aspect Ratio Settings #}
{% if entry.slidePhotoSizeSm|length %}
	{% set slidePhotoSizeSmall = entry.slidePhotoSizeSm %}
{% else %}
	{% set slidePhotoSizeSmall = gSettings.sliderAspectSm %}
{% endif %}

{% if entry.slidePhotoSizeLg|length %}
	{% set slidePhotoSizeLarge = entry.slidePhotoSizeLg %}
{% else %}
	{% set slidePhotoSizeLarge = gSettings.sliderAspectLg %}
{% endif %}

{# retrieve slide content #}
{% set slides = entry.slides.eagerly().all() %}

<div id="{{blockId}}" class="@container {% if animate %}animate{% endif %} {{blockClass}} {{ gMacros.displayClasses(entry.display, false)}} {{ gMacros.spacingClasses(entry.margins, false) }} {{ sliderSetClassList|join(' ') }} {{ entry.customClasses }}" {{- gMacros.attributesOut(entry.customAttributes) }} 

{% if entry.slides|length > 1 %}
x-data="{swiper: null}"
x-init="swiper = new Swiper($refs.container, {
	loop: true,
	slidesPerView: 1,
	spaceBetween: 0,
	centeredSlides: true,
	noSwipingSelector: 'a',
	{% if entry.autoplay %}
		autoplay: {
			delay: {{entry.slideTransitionDelay}},
			disableOnInteraction: false,
			speed: 600,
		},
	{% endif %}
	{% if entry.slideEffect == 'fade' %}
		effect: 'fade',
		fadeEffect: {
			crossFade: true,
		},
	{% endif %}
	{% if (entry.buttons) and (entry.slides|length > 1)  %}
		navigation: {
			nextEl: '#{{blockId}}-next',
			prevEl: '#{{blockId}}-prev',
		},
	{% endif %}
	{% if (entry.dots) and (entry.slides|length > 1)  %}
		pagination: {
			el: '#{{blockId}}-pagination',
			clickable: true,
		}
	{% endif %}  
	});"
{% endif %}>

	<div class="swiper-container" {% if entry.slides|length > 1 %}x-ref="container"{% endif %} id="{{ blockId  ~ '-swiper'}}">
		<div class="swiper-wrapper">			
			{% for slide in slides %}
				{{slide.render({					
					'colorScheme': colorScheme,
					'ownerId': blockId,
					'slideAspectSm': slidePhotoSizeSmall,
					'slideAspectLg': slidePhotoSizeLarge,					
				})}}
			{% endfor %}
		</div>
	</div>
	
	{% if (entry.buttons) and (entry.slides|length > 1)  %}
		<button class="swiper-button-prev" @click="swiper.slidePrev()" id="{{blockId}}-prev">
			{% if gSettings.sliderPreviousIcon|length %}
				{% if gSettings.sliderPreviousIcon.type == 'svg' %}
					{{ gSettings.sliderPreviousIcon.inline }}
				{% elseif gSettings.sliderPreviousIcon.type == 'css' %}
					<i class="{{ gSettings.sliderPreviousIcon }}"></i>								
				{% else %}
					<svg><use xlink:href="/sprites.svg#{{ gSettings.sliderPreviousIcon.value }}"></use></svg>
				{% endif %}
			{% else %}
				<svg><use xlink:href="/sprites.svg#icon-angle-left"></use></svg>
			{% endif %}
		</button>
		
		<button class="swiper-button-next" @click="swiper.slideNext()" id="{{blockId}}-next">
			{% if gSettings.sliderNextIcon|length %}
				{% if gSettings.sliderNextIcon.type == 'svg' %}
					{{ gSettings.sliderNextIcon.inline }}
				{% elseif gSettings.sliderNextIcon.type == 'css' %}
					<i class="{{ gSettings.sliderNextIcon }}"></i>								
				{% else %}
					<svg><use xlink:href="/sprites.svg#{{ gSettings.sliderNextIcon.value }}"></use></svg>
				{% endif %}
			{% else %}
				<svg><use xlink:href="/sprites.svg#icon-angle-right"></use></svg>
			{% endif %}
		</button>
	{% endif %}
	
	{% if (entry.dots) and (entry.slides|length > 1)  %}
		<div class="swiper-pagination" id="{{blockId}}-pagination"></div>
	{% endif %}	
</div>

	
