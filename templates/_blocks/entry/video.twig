{#
/**
 * Tilt Boilermaker - Video Template
 * -----
 * Loads the appropriate page partial or the default
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_macros/globalMacros' as gMacros %}

{# Create array for classes to pass to macros for section #}
{% set videoClassList = [] %}

{% set video = entry.videoAsset.eagerly().one() %}
{% set embeddedVideo = craft.embeddedAssets.get(video) %}

{# Set block id attribute value #}
{% if entry.customId is defined and entry.customId != '' %}
	{% set blockId = entry.customId|replace({' ': '-'})|trim %}
{% else %}
	{% set blockId = 'video-' ~ entry.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = "content-video" %}

{# Get classes for element animation settings #}
{% if animSetting is defined %}
	{% if animSetting.animate and animSetting.animateContent and animSetting.animLevel %}
		{% set animate = true %}	
	{% else %}
		{% set animate = false %}		
	{% endif %}
{% else %}
	{% set animate = false %}
{% endif %}

{# Set color classes #}
{% if colorScheme is not defined %}
	{% set colorScheme = "color-theme-default" %}	
{% endif %}
{% set colorClasses = [] %}
{% set colorClasses = colorClasses|merge([colorScheme]) %}
{% if entry.captionColor|length %}
	{% set colorClasses = colorClasses|merge(['text-' ~ entry.captionColor]) %}
{% endif %}
{% if entry.bgColor|length %}
	{% set colorClasses = colorClasses|merge(['bg-' ~ entry.bgColor]) %}
{% endif %}
{% set videoClassList = videoClassList|merge(colorClasses) %}

{# Retrieve styling adjustments #}
{#{% set adjustments = entry.videoStyleAdjustments.eagerly().all() %}#}

{# set outer tag depending on if element has caption or not #}
{% if entry.videoCaption != '' %}
	{% set outerTag = 'figure' %}
{% else %}
	{% set outerTag = 'div' %}
{% endif %}

{# OUTPUT #}
{% if embeddedVideo and embeddedVideo.isSafe %}
	<{{outerTag}} id="{{blockId}}" class="{{- blockClass }} {% if animate %}animate{% endif %} gMacros.widthClasses(entry.videoSize) {{ gMacros.displayClasses(entry.display)}} {{ gMacros.spacingClasses(entry.margins) }} {{ videoClassList|join(' ') }} {{ entry.customClasses }}" {{- gMacros.attributesOut(entry.customAttributes) }}>
		<div class="video-embed-wrapper" style="">
			<div class="video-player">						
				{{ embeddedVideo.getIframeCode(
					['rel=0', 'modestbranding=1'],
					['loading=lazy', 'allowfullscreen']
				) }}
			</div>
		</div>
		{% if entry.videoCaption != '' %}
			<figcaption class="image-caption">
				{{ entry.videoCaption }}						
			</figcaption>				  
		{% endif %}
	</{{outerTag}}>
{% endif %}