{#
/**
 * Tilt Boilermaker - Generic Row Block Template
 * -----
 * 
 * 
 * @author    TILT, LLC <support@tiltbuilt.com>
 * @copyright Copyright (c) 2019, TILT, LLC
 * @link      https://tiltbuilt.com
 */
#}

{# Load in global macros for use across all Twig templates #}
{% import '_macros/globalMacros' as gMacros %}

{% set rowContent = entry.columns.eagerly().all() %}

{# Create array for classes to pass to macros for section #}
{% set rowClassList = [] %}

{# Set block id attribute value #}
{% if entry.customId is defined and entry.customId != '' %}
	{% set blockId = entry.customId|replace({' ': '-'})|trim %}
{% else %}
	{% set blockId = 'row-' ~ entry.id %}
{% endif %}

{# Set block type handle as class name for styling #}
{% set blockClass = entry.type.handle|kebab %}

{# Get classes for element animation settings #}
{% if animSetting is not defined %}
	{% set animSetting = {'animate': false, 'animateContent': false, 'animLevel': false} %}
{% endif %}

{# set default color if not defined #}
{% if colorScheme is not defined %}
	{% set colorScheme = "color-theme-default" %}	
{% endif %}

{# insert layout changes #}

{% for layoutItem in entry.layoutSettings %}
	{% set devSize = layoutItem.layoutSize %}
	{% if devSize|length %}
		{% set devSize = devSize ~ ':' %}	
	{% endif %}

	
	{% if layoutItem.horizontalAlignment|length %}
		{% set rowClassList = rowClassList|merge([devSize ~ layoutItem.horizontalAlignment]) %}
	{% endif %}
	{% if layoutItem.verticalAlignment|length %}
		{% set rowClassList = rowClassList|merge([devSize ~ layoutItem.verticalAlignment]) %}
	{% endif %}
	
	{% if layoutItem.gutterSize|length %}
		{% set rowClassList = rowClassList|merge([devSize ~ 'gap-' ~ layoutItem.gutterSize]) %}
	{% endif %}
{% endfor %}

<div id="{{blockId}}" class="{{- blockClass }} @container {{ gMacros.displayClasses(entry.display)}} {{ gMacros.spacingClasses(entry.margins) }} {{ rowClassList|join(' ') }} {{ entry.customClasses }}" {{- gMacros.attributesOut(entry.customAttributes) -}}>
	{% for column in rowContent %}
		{{column.render({
			'animSetting': animSetting,
			'colorScheme': colorScheme,
			'layoutSettings': entry.layoutSettings,
			'sizeTracker': sizeTracker
		})}}
	{% endfor %}
</div>
